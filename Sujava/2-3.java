// 型の変換
// double型変数にint型の3を代入できたり、string型とint型を連結できたりと、このような記述がエラーにならないのは、Javaが式を評価する過程で自動的に型を変換しているため。
// Javaには型を変換する仕組みが３つ備わっていて、特に次の①と③はプログラムが気にしなくても自動的に機能する。

// ①代入時の自動型変換
// ②明示的な型変換
// ③演算時の自動型変換

// １つずつ説明する前に前提として
// 「ある型で宣言された変数には、その型の値しか代入できない」ことが原則であることを認識すること。

// ①代入時の自動型変換 = 代入先に合わせて姿を変える
// 例えば、数値型では、意味的な大小関係が定められている。
// 「小さい型」の値を「大きな型」の変数に代入する場合に限って、値が自動的に箱の方に変換されて代入されている。
// このように自動で代入しているため、コンパイルエラーにならない。

public class Main{
    public static void main( String [] args){
        float f = 3; ←float型の変数にint型を代入
        double d = f; ←double型の変数にfloat型を代入
        System.out.println(f);
        System.out.println(d);
    }
}

// 逆に「大きな型」→　「小さな型」は原則としてできない。箱に入りきらない可能性がある為。
